#ifndef FIR_FILTER_HPP
#define FIR_FILTER_HPP

#include <cstdint>

#include "filter.hpp"

namespace filtering
{

  class FIRFilter final : public Filter<Real>
  {
  public:
    auto apply(Real input) -> Real override;
    void reset() override;

  private:
    static constexpr std::size_t tapCount = 321;
    static constexpr Real filter_taps[tapCount] = {
        0.000174,
        0.000189,
        0.000204,
        0.000219,
        0.000236,
        0.000252,
        0.000270,
        0.000287,
        0.000306,
        0.000325,
        0.000344,
        0.000364,
        0.000385,
        0.000407,
        0.000429,
        0.000451,
        0.000474,
        0.000498,
        0.000523,
        0.000548,
        0.000573,
        0.000600,
        0.000627,
        0.000654,
        0.000682,
        0.000711,
        0.000741,
        0.000771,
        0.000801,
        0.000833,
        0.000865,
        0.000897,
        0.000931,
        0.000964,
        0.000999,
        0.001034,
        0.001070,
        0.001106,
        0.001143,
        0.001180,
        0.001218,
        0.001257,
        0.001296,
        0.001336,
        0.001376,
        0.001417,
        0.001459,
        0.001501,
        0.001543,
        0.001586,
        0.001630,
        0.001674,
        0.001719,
        0.001764,
        0.001809,
        0.001855,
        0.001902,
        0.001949,
        0.001996,
        0.002044,
        0.002092,
        0.002140,
        0.002189,
        0.002239,
        0.002288,
        0.002338,
        0.002389,
        0.002439,
        0.002490,
        0.002541,
        0.002593,
        0.002644,
        0.002696,
        0.002748,
        0.002800,
        0.002853,
        0.002905,
        0.002958,
        0.003011,
        0.003064,
        0.003117,
        0.003170,
        0.003223,
        0.003276,
        0.003329,
        0.003383,
        0.003436,
        0.003489,
        0.003542,
        0.003594,
        0.003647,
        0.003700,
        0.003752,
        0.003804,
        0.003857,
        0.003908,
        0.003960,
        0.004011,
        0.004062,
        0.004113,
        0.004164,
        0.004214,
        0.004263,
        0.004313,
        0.004362,
        0.004410,
        0.004458,
        0.004506,
        0.004553,
        0.004599,
        0.004645,
        0.004691,
        0.004736,
        0.004780,
        0.004824,
        0.004867,
        0.004910,
        0.004951,
        0.004993,
        0.005033,
        0.005073,
        0.005112,
        0.005150,
        0.005187,
        0.005224,
        0.005260,
        0.005295,
        0.005329,
        0.005363,
        0.005395,
        0.005427,
        0.005458,
        0.005488,
        0.005516,
        0.005544,
        0.005572,
        0.005598,
        0.005623,
        0.005647,
        0.005670,
        0.005692,
        0.005713,
        0.005733,
        0.005753,
        0.005771,
        0.005788,
        0.005803,
        0.005818,
        0.005832,
        0.005845,
        0.005856,
        0.005867,
        0.005876,
        0.005885,
        0.005892,
        0.005898,
        0.005903,
        0.005907,
        0.005910,
        0.005911,
        0.005912,
        0.005911,
        0.005910,
        0.005907,
        0.005903,
        0.005898,
        0.005892,
        0.005885,
        0.005876,
        0.005867,
        0.005856,
        0.005845,
        0.005832,
        0.005818,
        0.005803,
        0.005788,
        0.005771,
        0.005753,
        0.005733,
        0.005713,
        0.005692,
        0.005670,
        0.005647,
        0.005623,
        0.005598,
        0.005572,
        0.005544,
        0.005516,
        0.005488,
        0.005458,
        0.005427,
        0.005395,
        0.005363,
        0.005329,
        0.005295,
        0.005260,
        0.005224,
        0.005187,
        0.005150,
        0.005112,
        0.005073,
        0.005033,
        0.004993,
        0.004951,
        0.004910,
        0.004867,
        0.004824,
        0.004780,
        0.004736,
        0.004691,
        0.004645,
        0.004599,
        0.004553,
        0.004506,
        0.004458,
        0.004410,
        0.004362,
        0.004313,
        0.004263,
        0.004214,
        0.004164,
        0.004113,
        0.004062,
        0.004011,
        0.003960,
        0.003908,
        0.003857,
        0.003804,
        0.003752,
        0.003700,
        0.003647,
        0.003594,
        0.003542,
        0.003489,
        0.003436,
        0.003383,
        0.003329,
        0.003276,
        0.003223,
        0.003170,
        0.003117,
        0.003064,
        0.003011,
        0.002958,
        0.002905,
        0.002853,
        0.002800,
        0.002748,
        0.002696,
        0.002644,
        0.002593,
        0.002541,
        0.002490,
        0.002439,
        0.002389,
        0.002338,
        0.002288,
        0.002239,
        0.002189,
        0.002140,
        0.002092,
        0.002044,
        0.001996,
        0.001949,
        0.001902,
        0.001855,
        0.001809,
        0.001764,
        0.001719,
        0.001674,
        0.001630,
        0.001586,
        0.001543,
        0.001501,
        0.001459,
        0.001417,
        0.001376,
        0.001336,
        0.001296,
        0.001257,
        0.001218,
        0.001180,
        0.001143,
        0.001106,
        0.001070,
        0.001034,
        0.000999,
        0.000964,
        0.000931,
        0.000897,
        0.000865,
        0.000833,
        0.000801,
        0.000771,
        0.000741,
        0.000711,
        0.000682,
        0.000654,
        0.000627,
        0.000600,
        0.000573,
        0.000548,
        0.000523,
        0.000498,
        0.000474,
        0.000451,
        0.000429,
        0.000407,
        0.000385,
        0.000364,
        0.000344,
        0.000325,
        0.000306,
        0.000287,
        0.000270,
        0.000252,
        0.000236,
        0.000219,
        0.000204,
        0.000189,
        0.000174,
    };

    bool isInitialized = false;
    Real history[tapCount];
    std::size_t last_index;
  };

}

#endif
